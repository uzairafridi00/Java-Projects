
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Uzair Afridi
 */
public class Main extends javax.swing.JFrame {


    Connection con = MyConnection.getConnection();
    String img_path;
    String table_click_id;

    /**
     * Creates new form Main
     */
    public Main() throws SQLException {
        initComponents();
        DisplayTable();
        setIcon();
        initDateEditor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblEventName = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblVideo1 = new javax.swing.JLabel();
        txtEventName = new javax.swing.JTextField();
        btnAddImage = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescription = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        lblImageShow = new javax.swing.JLabel();
        txtImageName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDiaryData = new javax.swing.JTable();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuAdd = new javax.swing.JMenu();
        mnuAddUser = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Digital Diary");
        setResizable(false);

        pnlMain.setBackground(new java.awt.Color(240, 236, 227));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(89, 110, 121));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/diary-100.png"))); // NOI18N
        jLabel1.setText("Digital Diary");

        lblEventName.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblEventName.setForeground(new java.awt.Color(57, 62, 70));
        lblEventName.setText("Event Name:");

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblDate.setForeground(new java.awt.Color(57, 62, 70));
        lblDate.setText("Date:");

        lblImage.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblImage.setForeground(new java.awt.Color(57, 62, 70));
        lblImage.setText("Image:");

        lblVideo1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblVideo1.setForeground(new java.awt.Color(57, 62, 70));
        lblVideo1.setText("Description:");

        txtEventName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnAddImage.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddImage.setForeground(new java.awt.Color(57, 62, 70));
        btnAddImage.setText("Browse");
        btnAddImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImageActionPerformed(evt);
            }
        });

        taDescription.setColumns(20);
        taDescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        taDescription.setRows(5);
        jScrollPane1.setViewportView(taDescription);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(57, 62, 70));
        btnAdd.setText("Add Event");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(57, 62, 70));
        btnUpdate.setText("Update");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnReset.setForeground(new java.awt.Color(57, 62, 70));
        btnReset.setText("Reset");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        dateChooser.setDateFormatString("yyyy-MM-dd");

        tblDiaryData.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        tblDiaryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Event Name", "Description", "Date", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDiaryData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiaryDataMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDiaryData);

        lblId.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblId.setForeground(new java.awt.Color(57, 62, 70));
        lblId.setText("Id");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(57, 62, 70));
        btnDelete.setText("Delete");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset)
                        .addGap(174, 174, 174))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblImage)
                                    .addComponent(lblEventName)
                                    .addComponent(lblDate)
                                    .addComponent(lblVideo1)
                                    .addComponent(lblId))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAddImage)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                                    .addComponent(txtImageName)
                                    .addComponent(txtEventName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblImageShow, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(btnDelete)
                                .addGap(26, 26, 26)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAdd)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(lblId)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEventName))
                        .addGap(25, 25, 25)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainLayout.createSequentialGroup()
                                        .addComponent(lblDate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblImage)
                                            .addComponent(btnAddImage))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtImageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlMainLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblImageShow, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14)
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainLayout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnUpdate)
                                            .addComponent(btnAdd)
                                            .addComponent(btnDelete)))
                                    .addComponent(lblVideo1))
                                .addGap(29, 29, 29)))
                        .addComponent(btnReset)
                        .addGap(321, 321, 321))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        mnuAdd.setForeground(new java.awt.Color(57, 62, 70));
        mnuAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-icon.png"))); // NOI18N
        mnuAdd.setText("Add");
        mnuAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mnuAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mnuAddUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mnuAddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Users-Add-User-icon.png"))); // NOI18N
        mnuAddUser.setText("Add New User");
        mnuAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAddUserActionPerformed(evt);
            }
        });
        mnuAdd.add(mnuAddUser);

        jMenuBar1.add(mnuAdd);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DisplayTable() {
        Connection con = MyConnection.getConnection();
        try {
            String sql = "SELECT * FROM diary";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            tblDiaryData.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }


    private void btnAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImageActionPerformed

        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int res = chooser.showOpenDialog(Main.this);

        if (res == JFileChooser.APPROVE_OPTION) {

            file = chooser.getSelectedFile();
            filename = file.getAbsolutePath();

            // For checking the file
            try {
                File image = new File(filename);
                FileInputStream fs = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for (int readNum; (readNum = fs.read(buf)) != -1;) {
                    bos.write(buf, 0, readNum);
                }
                event_image = bos.toByteArray();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

            ImageIcon image_icon = new ImageIcon(file.getAbsolutePath());
            Rectangle rec = lblImageShow.getBounds();
            Image scaledImage = image_icon.getImage().getScaledInstance(rec.width, rec.height, Image.SCALE_SMOOTH);
            image_icon = new ImageIcon(scaledImage);
            String path = filename;
            img_path = path;
            lblImageShow.setIcon(image_icon);
            txtImageName.setText(file.getAbsolutePath());
        } else {
            JOptionPane.showMessageDialog(null, "No new Image is Selected.");
        }

    }//GEN-LAST:event_btnAddImageActionPerformed

    /**
     * This Method Set Text to Null Text Fields
     */
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        resetFields();
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * This Method Opens AddUser Form in New Window
     */
    private void mnuAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAddUserActionPerformed

        // It Will Open AddUser Form
        AddUser addUser = new AddUser();
        addUser.setVisible(true);
        addUser.pack();
        addUser.setLocationRelativeTo(null);
    }//GEN-LAST:event_mnuAddUserActionPerformed

    /**
     * This Method Add or Save event
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        PreparedStatement ps;
        if (img_path != null) {
            try {
                if (verifyText()) {
                    ps = con.prepareStatement("INSERT INTO `diary`(`event_name`, `description`, `date`, `image`) VALUES (?,?,?,?)");
                    ps.setString(1, txtEventName.getText());
                    ps.setString(2, taDescription.getText());
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    String date = dateFormat.format(dateChooser.getDate());
                    ps.setString(3, date);
                    InputStream img = new FileInputStream(new File(img_path));
                    ps.setBlob(4, img);
                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "Event \"" + txtEventName.getText() + "\" has been added");
                    }
                }
                resetFields();
                DisplayTable();
            } catch (Exception ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Image Selected");
        }

        img_path = null;


    }//GEN-LAST:event_btnAddActionPerformed

    private void tblDiaryDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiaryDataMouseClicked
        int row_index = tblDiaryData.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblDiaryData.getModel();
        txtId.setText(model.getValueAt(row_index, 0).toString());
        table_click_id = (tblDiaryData.getModel().getValueAt(row_index, 0).toString());
        txtEventName.setText(model.getValueAt(row_index, 1).toString());
        taDescription.setText(model.getValueAt(row_index, 2).toString());

        Pic picObj = new Pic();
        picObj.setVisible(true);
        picObj.pack();
        //  picObj.setLocationRelativeTo(null);
        // Giving Id from table
        picObj.displayImage(table_click_id);

        Date date;
        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(row_index, 3).toString());
            dateChooser.setDate(date);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "ERROR !! " + ex.getMessage());
        }
    }//GEN-LAST:event_tblDiaryDataMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        PreparedStatement ps;
        if (img_path != null) {
            try {
                if (verifyText()) {
                    ps = con.prepareStatement("UPDATE `diary` SET `event_name`=?,`description`=?,`date`=?,`image`=? Where id =' " + table_click_id + " ' ");
                    ps.setString(1, txtEventName.getText());
                    ps.setString(2, taDescription.getText());
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    String date = dateFormat.format(dateChooser.getDate());
                    ps.setString(3, date);
                    InputStream img = new FileInputStream(new File(img_path));
                    ps.setBlob(4, img);
                    if (ps.executeUpdate() > 0) {
                        JOptionPane.showMessageDialog(null, "Event \"" + txtEventName.getText() + "\" has been Updated.");
                    }
                }
                resetFields();
                DisplayTable();
            } catch (Exception ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Image Selected");
        }

        img_path = null;

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        PreparedStatement ps;
        try {
            ps = con.prepareStatement("DELETE FROM `diary` WHERE id = ' " + table_click_id + " ' ");
            if (ps.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(null, "Event \"" + txtEventName.getText() + "\" has been Deleted Successfully.");
            }
            resetFields();
            DisplayTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * setIcon method is use to set Icon for Window
     */
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("images/diary-book-icon.png")));
    }

    /**
     * initDateEditor Method is use to set the text field forbidden on user
     */
    public void initDateEditor() {
        dtEditor = (JTextFieldDateEditor) dateChooser.getDateEditor();
        dtEditor.setEditable(false);
        dtEditor.setBackground(Color.WHITE);
    }

    private void resetFields() {
        txtId.setText("");
        txtEventName.setText("");
        txtImageName.setText("");
        dateChooser.setDate(null);
        btnAddImage.setDefaultCapable(false);
        lblImageShow.setIcon(null);
        taDescription.setText("");
    }

    // Checks the validity of empty text
    public boolean verifyText() {
        if (txtEventName.getText().equals("") || taDescription.getText().equals("") || txtImageName.getText().equals("") || dateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(null, "One or More text field is empty.");
            return false;
        } else if (dateChooser.getDate().compareTo(new Date()) > 0) {    // Choose a date higher then the current date
            JOptionPane.showMessageDialog(null, "No Event from Future has been added.");
            return false;
        } else {
            return true;
        }
    }

    // User Define Object
    JTextFieldDateEditor dtEditor;
    File file;
    private JFileChooser chooser;
    private ImageIcon format = null;
    String filename = null;
    int s = 0;
    byte[] event_image = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddImage;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEventName;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblImageShow;
    private javax.swing.JLabel lblVideo1;
    private javax.swing.JMenu mnuAdd;
    protected static javax.swing.JMenuItem mnuAddUser;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextArea taDescription;
    private javax.swing.JTable tblDiaryData;
    private javax.swing.JTextField txtEventName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtImageName;
    // End of variables declaration//GEN-END:variables

}
